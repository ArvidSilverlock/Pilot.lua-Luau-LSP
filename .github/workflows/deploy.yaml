name: Build, Deploy Wiki & Release Workspace

on:
  push:
    branches:
      - master

concurrency:
  group: deploy
  cancel-in-progress: true

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      wiki: ${{ steps.filter.outputs.wiki == 'true' }}
      workspace: ${{ steps.filter.outputs.workspace == 'true' }}
    steps:
      - name: Checkout full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Filter changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            wiki:
              - 'wiki/**'
              - '.lune/generate/partdata.json'
              - '.lune/generate/documentation.yaml'
              - '.lune/generate/generators/Wiki.luau'
            workspace:
              - '.lune/pilot-generate.luau'
              - '.lune/generate/**'

  pilot-generate:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.wiki || needs.filter.outputs.workspace
    steps:
      - name: Install Rokit
        uses: CompeyDev/setup-rokit@v0.1.2
      - uses: actions/checkout@v4
      - name: Install lune
        run: rokit install --no-trust-check
      - name: Run pilot-generate
        run: lune run pilot-generate -- --release

      - name: Upload wiki artifact
        uses: actions/upload-artifact@v4
        if: needs.filter.outputs.wiki
        with:
          name: wiki
          path: wiki

      - name: Upload workspace artifact
        uses: actions/upload-artifact@v4
        if: needs.filter.outputs.workspace
        with:
          name: workspace
          path: workspace

  deploy_wiki:
    needs: pilot-generate
    if: needs.filter.outputs.wiki
    runs-on: ubuntu-latest

    permissions:
      pages: write

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Download wiki artifact
        uses: actions/download-artifact@v4
        with:
          name: wiki
          path: wiki-deployment

      - run: npm ci
        working-directory: wiki-deployment
      - run: npm run build
        working-directory: wiki-deployment

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./wiki-deployment/build

  release_workspace:
    needs: pilot-generate
    if: needs.filter.outputs.workspace
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: workspace
          path: workspace

      - name: Zip workspace directory
        run: zip -r workspace.zip workspace

      - name: Generate date-based tag
        id: get_tag
        run: echo "tag=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Release ${{ steps.get_tag.outputs.tag }}
          body: Automated release on ${{ steps.get_tag.outputs.tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./workspace.zip
          asset_name: workspace.zip
          asset_content_type: application/zip
