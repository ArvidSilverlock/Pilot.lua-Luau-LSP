name: Build, Deploy Wiki & Release Workspace

on:
  push:
    paths:
      - wiki/**
      - documentation/**
      - .lune/generate/**
      - .lune/pilot-generate.luau
      - .github/workflows/deploy.yaml
    branches:
      - master

concurrency:
  group: deploy
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      wiki: ${{ steps.filter.outputs.wiki }}
      workspace: ${{ steps.filter.outputs.workspace }}
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Filter changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            wiki:
              - 'wiki/**'
              - 'documentation/partdata.json'
              - 'documentation/documentation.yaml'
              - 'documentation/programs/**'
              - '.lune/generate/generators/Wiki.luau'
              - '.github/workflows/deploy.yaml'
            workspace:
              - '.lune/pilot-generate.luau'
              - 'documentation/documentation.yaml'
              - 'documentation/documentation.json'
              - 'documentation/partdata.json'
              - '.lune/generate/modules/**'
              - '.lune/generate/object-data/**'
              - '.lune/generate/data-parsing/**'
              - '.lune/generate/generators/Darklua.luau'
              - '.lune/generate/generators/Definition.luau'
              - '.lune/generate/generators/Documentation.luau'
              - '.lune/generate/generators/Modules.luau'
              - '.lune/generate/generators/Rokit.luau'
              - '.lune/generate/generators/Selene.luau'
              - '.lune/generate/generators/Vanilla.luau'
              - '.lune/generate/generators/VSCode.luau'
              - '.lune/generate/generators/types/**'
              - '.github/workflows/deploy.yaml'
          # Is this wrong of me? Yes, but I don't care.

  pilot-generate:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.wiki == 'true' || needs.filter.outputs.workspace == 'true'
    steps:
      - name: Install Rokit
        uses: CompeyDev/setup-rokit@v0.1.2
      - uses: actions/checkout@v4
      - name: Install lune
        run: rokit install --no-trust-check

      - name: Run pilot-generate for workspace
        if: needs.filter.outputs.workspace == 'true'
        run: lune run pilot-generate -- --release
      - name: Run pilot-generate for wiki
        if: needs.filter.outputs.wiki == 'true'
        run: lune run pilot-generate -- --wikionly

      - name: Upload wiki artifact
        uses: actions/upload-artifact@v4
        if: needs.filter.outputs.wiki == 'true'
        with:
          name: wiki
          path: wiki

      - name: Zip workspace directory
        if: needs.filter.outputs.workspace == 'true'
        run: zip -r workspace.zip workspace
      - name: Upload workspace artifact (as zip)
        uses: actions/upload-artifact@v4
        if: needs.filter.outputs.workspace == 'true'
        with:
          name: workspace
          path: workspace.zip

  deploy_wiki:
    needs: pilot-generate
    if: needs.filter.outputs.wiki == 'true'
    runs-on: ubuntu-latest

    env:
      ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
      ALGOLIA_SEARCH_API_KEY: ${{ secrets.ALGOLIA_SEARCH_API_KEY }}
      ALGOLIA_INDEX_NAME: ${{ secrets.ALGOLIA_INDEX_NAME }}
      GTAG_TRACKING_ID: ${{ secrets.GTAG_TRACKING_ID }}

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Download wiki artifact
        uses: actions/download-artifact@v4
        with:
          name: wiki
          path: wiki-deployment

      - run: npm ci
        working-directory: wiki-deployment
      - run: npm run build
        working-directory: wiki-deployment

      - name: Upload built wiki to GitHub Pages artifact store
        uses: actions/upload-pages-artifact@v3
        with:
          path: wiki-deployment/build

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  release_workspace:
    needs: pilot-generate
    if: needs.filter.outputs.workspace == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download workspace artifact
        uses: actions/download-artifact@v4
        with:
          name: workspace
          path: .

      - name: Fetch all existing tags
        run: git fetch --tags

      - name: Get date-based version tag
        id: get_tag
        run: |
          DATE=$(date +'%Y-%m-%d')

          TAGS=$(git tag -l "$DATE*")

          MAX=0
          for TAG in $TAGS; do
            SUFFIX=${TAG#"$DATE"-}
            if [[ "$SUFFIX" =~ ^[0-9]+$ ]]; then
              if (( SUFFIX > MAX )); then
                MAX=$SUFFIX
              fi
            fi
          done

          NEXT=$((MAX + 1))
          NEW_TAG="$DATE-$NEXT"
          echo "tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Release ${{ steps.get_tag.outputs.tag }}
          body: Automated release on ${{ steps.get_tag.outputs.tag }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./workspace.zip
          asset_name: workspace.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
