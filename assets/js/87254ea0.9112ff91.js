"use strict";(self.webpackChunkwaste_of_space_wiki=self.webpackChunkwaste_of_space_wiki||[]).push([[1741],{3941:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"objects/RepairPlate","title":"RepairPlate","description":"EXPERIMENTAL - While at least 90% charged (27 power), distributes repaired health between itself and damaged parts attached to its top surface.","source":"@site/docs/objects/RepairPlate.md","sourceDirName":"objects","slug":"/objects/RepairPlate","permalink":"/Pilot.lua-Luau-LSP/objects/RepairPlate","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Unused","permalink":"/Pilot.lua-Luau-LSP/tags/unused"},{"inline":true,"label":"Electrical","permalink":"/Pilot.lua-Luau-LSP/tags/electrical"},{"inline":true,"label":"Spawnable","permalink":"/Pilot.lua-Luau-LSP/tags/spawnable"},{"inline":true,"label":"Non-Programmable","permalink":"/Pilot.lua-Luau-LSP/tags/non-programmable"},{"inline":true,"label":"Non-Configurable","permalink":"/Pilot.lua-Luau-LSP/tags/non-configurable"}],"version":"current","frontMatter":{"tags":["Unused","Electrical","Spawnable","Non-Programmable","Non-Configurable"]},"sidebar":"objectsSidebar","previous":{"title":"RepairLaser","permalink":"/Pilot.lua-Luau-LSP/objects/RepairLaser"},"next":{"title":"Rice","permalink":"/Pilot.lua-Luau-LSP/objects/Rice"}}');var r=a(4848),i=a(8453);const l={tags:["Unused","Electrical","Spawnable","Non-Programmable","Non-Configurable"]},s=void 0,o={},c=[{value:"Events",id:"events",level:2},{value:"Loop(deltaTime)",id:"loopdeltatime",level:3}];function d(e){const t={h2:"h2",h3:"h3",hr:"hr",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["EXPERIMENTAL - While at least ",(0,r.jsx)("b",{children:"90%"})," charged (",(0,r.jsx)("b",{children:"27"})," power), distributes repaired health between itself and damaged parts attached to its top surface."]}),"\n",(0,r.jsxs)(t.p,{children:["Charges at a fixed rate of ",(0,r.jsx)("b",{children:"1"})," power per second, up to a total capacity of ",(0,r.jsx)("b",{children:"30"}),". Once charged, it consumes ",(0,r.jsx)("b",{children:"2.5"})," power per second.\nCan be chained with other ",(0,r.jsx)("code",{children:"RepairPlate"}),"s.\nPower cannot be inserted or extracted.\nCannot be resized below 1x1x1."]}),"\n",(0,r.jsx)(t.h2,{id:"events",children:"Events"}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"loopdeltatime",children:"Loop(deltaTime)"}),"\n",(0,r.jsx)(t.p,{children:"Fires when the object is updated by the game loop."}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)("b",{children:"deltaTime"})," parameter is the 'time' since the last tick, it does not represent the ",(0,r.jsx)("i",{children:"actual"})," time since the last tick was occurred, rather just how often a game tick should be fired (it will always be precisely ",(0,r.jsx)("code",{children:"1"}),"). It is a ",(0,r.jsx)("code",{children:"number"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>l,x:()=>s});var n=a(6540);const r={},i=n.createContext(r);function l(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);