"use strict";(self.webpackChunkwaste_of_space_wiki=self.webpackChunkwaste_of_space_wiki||[]).push([[4233],{8425:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"objects/TemperatureSensor","title":"TemperatureSensor","description":"When the surrounding temperature is within the defined range, it will emit a trigger signal every two seconds.","source":"@site/docs/objects/TemperatureSensor.md","sourceDirName":"objects","slug":"/objects/TemperatureSensor","permalink":"/Pilot.lua-Luau-LSP/objects/TemperatureSensor","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Logic","permalink":"/Pilot.lua-Luau-LSP/tags/logic"},{"inline":true,"label":"Spawnable","permalink":"/Pilot.lua-Luau-LSP/tags/spawnable"},{"inline":true,"label":"Craftable","permalink":"/Pilot.lua-Luau-LSP/tags/craftable"},{"inline":true,"label":"Programmable","permalink":"/Pilot.lua-Luau-LSP/tags/programmable"},{"inline":true,"label":"Configurable","permalink":"/Pilot.lua-Luau-LSP/tags/configurable"}],"version":"current","frontMatter":{"tags":["Logic","Spawnable","Craftable","Programmable","Configurable"]},"sidebar":"objectsSidebar","previous":{"title":"TemperatureGate","permalink":"/Pilot.lua-Luau-LSP/objects/TemperatureGate"},"next":{"title":"TestStarMap","permalink":"/Pilot.lua-Luau-LSP/objects/TestStarMap"}}');var n=r(4848),i=r(8453);const s={tags:["Logic","Spawnable","Craftable","Programmable","Configurable"]},l=void 0,o={},u=[{value:"Methods",id:"methods",level:2},{value:"GetTemp() \u2192 temperature",id:"gettemp--temperature",level:3},{value:"Configurables",id:"configurables",level:2},{value:"TemperatureRange",id:"temperaturerange",level:3},{value:"Events",id:"events",level:2},{value:"Loop(deltaTime)",id:"loopdeltatime",level:3}];function c(e){const t={h2:"h2",h3:"h3",hr:"hr",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"When the surrounding temperature is within the defined range, it will emit a trigger signal every two seconds.\nWhen connected to a Reactor part, will use the Reactor's internal temperature."}),"\n",(0,n.jsx)(t.p,{children:"The more advanced twin of this part, the TemperatureGate part may be more useful in many cases.\nIt updates at a quicker rate and is more versatile, due to it controlling power flow."}),"\n",(0,n.jsx)(t.p,{children:"It is a craftable and spawnable non-flammable solid."}),"\n",(0,n.jsx)(t.p,{children:"Here is a list of possible sizes that reach the maximum malleability (64) that have integer components: 1x64x1, 1x32x2, 1x16x4, 1x8x8, 2x16x2, 2x8x4, 4x4x4, 8x4x2"}),"\n",(0,n.jsx)(t.p,{children:"At its default size (1x1x2) it has a durability of 1, at its maximum size it has a durability of 4."}),"\n",(0,n.jsxs)(t.p,{children:["By default, its colour is ",(0,n.jsx)("span",{style:{color:"#635F62"},children:"#635f62"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["It requires 1 ",(0,n.jsx)("code",{children:"Iron"}),", 2 ",(0,n.jsx)("code",{children:"Polysilicon"}),", and 1 ",(0,n.jsx)("code",{children:"TriggerWire"})," to be crafted."]}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"gettemp--temperature",children:"GetTemp() \u2192 temperature"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)("b",{children:"temperature"})," return is a ",(0,n.jsx)("code",{children:"number"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"configurables",children:"Configurables"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"temperaturerange",children:"TemperatureRange"}),"\n",(0,n.jsxs)(t.p,{children:["The range of temperatures (\xb0F) which this sensor will trigger at. It is a ",(0,n.jsx)("code",{children:"NumberRange"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"events",children:"Events"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"loopdeltatime",children:"Loop(deltaTime)"}),"\n",(0,n.jsx)(t.p,{children:"Fires when the object is updated by the game loop."}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)("b",{children:"deltaTime"})," parameter is the 'time' since the last tick, it does not represent the ",(0,n.jsx)("i",{children:"actual"})," time since the last tick was occurred, rather just how often a game tick should be fired (it will always be precisely ",(0,n.jsx)("code",{children:"1"}),"). It is a ",(0,n.jsx)("code",{children:"number"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>l});var a=r(6540);const n={},i=a.createContext(n);function s(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);