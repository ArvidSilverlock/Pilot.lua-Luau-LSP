"use strict";(self.webpackChunkwaste_of_space_wiki=self.webpackChunkwaste_of_space_wiki||[]).push([[1996],{6947:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>t,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"objects/TouchScreen","title":"TouchScreen","description":"A Screen, but can handle player mouse input.","source":"@site/docs/objects/TouchScreen.md","sourceDirName":"objects","slug":"/objects/TouchScreen","permalink":"/Pilot.lua-Luau-LSP/objects/TouchScreen","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Logic","permalink":"/Pilot.lua-Luau-LSP/tags/logic"},{"inline":true,"label":"Electrical","permalink":"/Pilot.lua-Luau-LSP/tags/electrical"},{"inline":true,"label":"Spawnable","permalink":"/Pilot.lua-Luau-LSP/tags/spawnable"},{"inline":true,"label":"Craftable","permalink":"/Pilot.lua-Luau-LSP/tags/craftable"},{"inline":true,"label":"Programmable","permalink":"/Pilot.lua-Luau-LSP/tags/programmable"},{"inline":true,"label":"Configurable","permalink":"/Pilot.lua-Luau-LSP/tags/configurable"}],"version":"current","frontMatter":{"tags":["Logic","Electrical","Spawnable","Craftable","Programmable","Configurable"]},"sidebar":"objectsSidebar","previous":{"title":"Torch","permalink":"/Pilot.lua-Luau-LSP/objects/Torch"},"next":{"title":"TouchSensor","permalink":"/Pilot.lua-Luau-LSP/objects/TouchSensor"}}');var i=s(4848),o=s(8453);const t={tags:["Logic","Electrical","Spawnable","Craftable","Programmable","Configurable"]},a=void 0,l={},c=[{value:"Methods",id:"methods",level:2},{value:"GetCursor(username) \u2192 cursor",id:"getcursorusername--cursor",level:3},{value:"GetCursors() \u2192 cursors",id:"getcursors--cursors",level:3},{value:"Configurables",id:"configurables",level:2},{value:"VideoID",id:"videoid",level:3},{value:"Events",id:"events",level:2},{value:"Configured(configurerId)",id:"configuredconfigurerid",level:3},{value:"CursorMoved",id:"cursormoved",level:3},{value:"CursorPressed",id:"cursorpressed",level:3},{value:"CursorReleased",id:"cursorreleased",level:3}];function u(e){const r={h2:"h2",h3:"h3",hr:"hr",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["A ",(0,i.jsx)("code",{children:"Screen"}),", but can handle player mouse input.\nThis is to be used with programming."]}),"\n",(0,i.jsx)(r.p,{children:"It is a craftable and spawnable non-flammable solid."}),"\n",(0,i.jsx)(r.p,{children:"Here is a list of possible sizes that reach the maximum malleability (400) that have integer components: 1x400x1, 1x200x2, 1x100x4, 1x80x5, 1x50x8, 1x40x10, 1x25x16, 1x20x20, 2x100x2, 2x50x4, 2x40x5, 2x25x8, 2x20x10, 4x25x4, 4x20x5, 4x10x10, 5x16x5, 5x10x8, 10x8x5, 16x5x5, 20x10x2, 20x5x4"}),"\n",(0,i.jsx)(r.p,{children:"At its default size (8x1x8) it has a durability of 1, at its maximum size it has a durability of 2."}),"\n",(0,i.jsxs)(r.p,{children:["By default, its colour is ",(0,i.jsx)("span",{style:{color:"#111111"},children:"#111111"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["It requires 4 ",(0,i.jsx)("code",{children:"Copper"}),", 2 ",(0,i.jsx)("code",{children:"Iron"}),", 1 ",(0,i.jsx)("code",{children:"Screen"}),", 3 ",(0,i.jsx)("code",{children:"Silicon"}),", and 1 ",(0,i.jsx)("code",{children:"TouchSensor"})," to be crafted."]}),"\n",(0,i.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"getcursorusername--cursor",children:"GetCursor(username) \u2192 cursor"}),"\n",(0,i.jsx)(r.p,{children:"Gets the specified player's cursor."}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("b",{children:"username"})," parameter is the username of the player's cursor you want to get. It is a ",(0,i.jsx)("code",{children:"string"}),"."]}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("b",{children:"cursor"})," return is a ",(0,i.jsx)("code",{children:"Cursor"}),"."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"getcursors--cursors",children:"GetCursors() \u2192 cursors"}),"\n",(0,i.jsx)(r.p,{children:"Gets a dictionary of player usernames to their cursors if their cursors are on the screen."}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("b",{children:"cursors"})," return is a dictionary of player usernames to their cursors. It is a dictionary with keys that are ",(0,i.jsx)("code",{children:"string"}),"s and values that are ",(0,i.jsx)("code",{children:"Cursor"}),"s."]}),"\n",(0,i.jsx)(r.h2,{id:"configurables",children:"Configurables"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"videoid",children:"VideoID"}),"\n",(0,i.jsxs)(r.p,{children:["The ID of the camera feed being to be viewed, or 0 for none. It is a ",(0,i.jsx)("code",{children:"number"}),".\nIt ranges between 0 and 10000000000. It increments by 1."]}),"\n",(0,i.jsx)(r.h2,{id:"events",children:"Events"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"configuredconfigurerid",children:"Configured(configurerId)"}),"\n",(0,i.jsx)(r.p,{children:"Fires when the object is configured."}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)("b",{children:"configurerId"})," parameter is the ",(0,i.jsx)("code",{children:"UserId"})," of the player who configured the object. It is a ",(0,i.jsx)("code",{children:"number"}),"."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cursormoved",children:"CursorMoved"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cursorpressed",children:"CursorPressed"}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"cursorreleased",children:"CursorReleased"})]})}function d(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>t,x:()=>a});var n=s(6540);const i={},o=n.createContext(i);function t(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);