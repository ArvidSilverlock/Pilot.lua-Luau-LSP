"use strict";(self.webpackChunkwaste_of_space_wiki=self.webpackChunkwaste_of_space_wiki||[]).push([[8355],{2274:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"objects/VehicleSeat","title":"VehicleSeat","description":"Allows players to control vehicles by rotating when sat on.","source":"@site/docs/objects/VehicleSeat.md","sourceDirName":"objects","slug":"/objects/VehicleSeat","permalink":"/Pilot.lua-Luau-LSP/objects/VehicleSeat","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Spawnable","permalink":"/Pilot.lua-Luau-LSP/tags/spawnable"},{"inline":true,"label":"Craftable","permalink":"/Pilot.lua-Luau-LSP/tags/craftable"},{"inline":true,"label":"Programmable","permalink":"/Pilot.lua-Luau-LSP/tags/programmable"},{"inline":true,"label":"Configurable","permalink":"/Pilot.lua-Luau-LSP/tags/configurable"}],"version":"current","frontMatter":{"tags":["Spawnable","Craftable","Programmable","Configurable"]},"sidebar":"objectsSidebar","previous":{"title":"Valve","permalink":"/Pilot.lua-Luau-LSP/objects/Valve"},"next":{"title":"VintagePlasmaPistol","permalink":"/Pilot.lua-Luau-LSP/objects/VintagePlasmaPistol"}}');var a=n(4848),l=n(8453);const s={tags:["Spawnable","Craftable","Programmable","Configurable"]},r=void 0,o={},c=[{value:"Methods",id:"methods",level:2},{value:"EjectOccupant()",id:"ejectoccupant",level:3},{value:"GetOccupant() \u2192 currentOccupant",id:"getoccupant--currentoccupant",level:3},{value:"Configurables",id:"configurables",level:2},{value:"Enabled",id:"enabled",level:3},{value:"Mode",id:"mode",level:3},{value:"Speed",id:"speed",level:3},{value:"Events",id:"events",level:2},{value:"Configured(configurerId)",id:"configuredconfigurerid",level:3},{value:"OccupantChanged",id:"occupantchanged",level:3}];function d(e){const t={h2:"h2",h3:"h3",hr:"hr",p:"p",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Allows players to control vehicles by rotating when sat on.\nIt is incredibly important to have when creating vehicles."}),"\n",(0,a.jsx)(t.p,{children:"Attaching buttons to the vehicleseat will allow the player sitting on it to trigger the button by pressing a key.\nSimply attach the button to the vehicle seat, configure it to the keybind you would like, and it will allow you to trigger that button by pressing the key when sitting down in the seat."}),"\n",(0,a.jsx)(t.p,{children:"It is a craftable and spawnable non-flammable solid."}),"\n",(0,a.jsx)(t.p,{children:"Here is a list of possible sizes that reach the maximum malleability (9) that have integer components: 1x9x1, 1x3x3"}),"\n",(0,a.jsx)(t.p,{children:"At its default size (2x1x2) it has a durability of 4, at its maximum size it has a durability of 6."}),"\n",(0,a.jsxs)(t.p,{children:["By default, its colour is ",(0,a.jsx)("span",{style:{color:"#0000FF"},children:"#0000ff"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["It requires 2 ",(0,a.jsx)("code",{children:"Rubber"})," and 3 ",(0,a.jsx)("code",{children:"Wood"})," to be crafted."]}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"ejectoccupant",children:"EjectOccupant()"}),"\n",(0,a.jsx)(t.p,{children:"Ejects the seat occupant."}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"getoccupant--currentoccupant",children:"GetOccupant() \u2192 currentOccupant"}),"\n",(0,a.jsxs)(t.p,{children:["Retrieves the ",(0,a.jsx)("code",{children:"UserId"})," of the seat's occupant, it will be ",(0,a.jsx)("code",{children:"nil"})," if there is no occupant."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)("b",{children:"currentOccupant"})," return is a ",(0,a.jsx)("code",{children:"number"}),". It can also be ",(0,a.jsx)("code",{children:"nil"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"configurables",children:"Configurables"}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"enabled",children:"Enabled"}),"\n",(0,a.jsxs)(t.p,{children:["Determines whether this seat should control its rotation. Turning this off results in a regular seat. It is a ",(0,a.jsx)("code",{children:"boolean"}),"."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"mode",children:"Mode"}),"\n",(0,a.jsxs)(t.p,{children:["The control mode of the seat. Horizontal: Rotate horizontally with A/D. Full: Rotate horizontally and vertically with W/A/S/D. Mouse: point towards the player's mouse when holding click. It is a ",(0,a.jsx)("code",{children:"VehicleSeatMode"}),"."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"speed",children:"Speed"}),"\n",(0,a.jsxs)(t.p,{children:["The speed at which the seat will rotate. It is a ",(0,a.jsx)("code",{children:"number"}),".\nIt ranges between 0 and 10."]}),"\n",(0,a.jsx)(t.h2,{id:"events",children:"Events"}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"configuredconfigurerid",children:"Configured(configurerId)"}),"\n",(0,a.jsx)(t.p,{children:"Fires when the object is configured."}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)("b",{children:"configurerId"})," parameter is the ",(0,a.jsx)("code",{children:"UserId"})," of the player who configured the object. It is a ",(0,a.jsx)("code",{children:"number"}),"."]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h3,{id:"occupantchanged",children:"OccupantChanged"})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var i=n(6540);const a={},l=i.createContext(a);function s(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);