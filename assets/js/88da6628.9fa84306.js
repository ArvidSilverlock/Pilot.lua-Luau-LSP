"use strict";(self.webpackChunkwaste_of_space_wiki=self.webpackChunkwaste_of_space_wiki||[]).push([[18401,46944],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(96540);const i={},a=o.createContext(i);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:n},e.children)}},59907:(e,n,t)=>{t.d(n,{A:()=>m});t(96540);var o=t(34164),i=t(21312),a=t(6342),r=t(28774),s=t(63427),d=t(92303),l=t(74848);function c({children:e,fallback:n}){return(0,d.A)()?(0,l.jsx)(l.Fragment,{children:e?.()}):n??null}var h=t(61409),u=t(81113);function p(e){return(0,l.jsx)("svg",{viewBox:"0 0 24 24",...e,children:(0,l.jsx)("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})})}const f={anchorWithStickyNavbar:"anchorWithStickyNavbar_wkc4",anchorWithHideOnScrollNavbar:"anchorWithHideOnScrollNavbar_m_Ui"};var g=t(56347);function m({id:e,group:n,...t}){const d=(0,s.A)(),{navbar:{hideOnScroll:m}}=(0,a.p)();d.collectAnchor(e);const _="group"===n?"h2":"h3",v=(0,i.T)({id:"theme.common.headingLinkTitle",message:"Direct link to {heading}",description:"Title for link to heading"},{heading:e}),x=(0,i.T)({id:"theme.common.markdownLinkTitle",message:"Copy markdown link to {heading}",description:"Markdown for link to heading"},{heading:e}),C=(0,g.zy)().pathname;return(0,l.jsxs)(_,{...t,className:(0,o.A)("anchor",m?f.anchorWithHideOnScrollNavbar:f.anchorWithStickyNavbar,t.className),id:e,children:[t.children,(0,l.jsx)(r.A,{className:"icon-link",to:`#${e}`,"aria-label":v,title:v,children:(0,l.jsx)(p,{width:"0.75em",height:"0.75em"})}),(0,l.jsx)(c,{children:()=>{const t=location.pathname.split("/").filter(Boolean),o=t[t.length-1],i=`[${"group"==n?`\`${o}\`'s ${e.toLowerCase()}`:"method"==n?`\`${o}:${e}()\``:`\`${o}.${e}\``}](<${`${window.location.origin}${C}#${e}`}>)`;return(0,l.jsx)("a",{className:"icon-link","aria-label":x,title:x,onClick:()=>{h.oR.dark((0,l.jsxs)("a",{children:["Copied the ",(0,l.jsx)("code",{children:e})," link to clipboard."]}),{position:"top-center",autoClose:1e3,hideProgressBar:!0,closeOnClick:!0,pauseOnHover:!0,draggable:!1,progress:void 0,theme:"colored",transition:h.GP}),navigator.clipboard.writeText(i)},children:(0,l.jsx)(u.A,{width:"0.75em",height:"0.75em"})})}})]})}},78178:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"types/Universe Info/Coordinates/CoordinatesMetatable","title":"CoordinatesMetatable","description":"Clone","source":"@site/docs/types/Universe Info/Coordinates/CoordinatesMetatable.mdx","sourceDirName":"types/Universe Info/Coordinates","slug":"/types/Universe Info/Coordinates/CoordinatesMetatable","permalink":"/Pilot.lua-Luau-LSP/types/Universe Info/Coordinates/CoordinatesMetatable","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typesSidebar","previous":{"title":"Coordinates","permalink":"/Pilot.lua-Luau-LSP/types/Universe Info/Coordinates/"},"next":{"title":"RegionInfo","permalink":"/Pilot.lua-Luau-LSP/types/Universe Info/RegionInfo"}}');var i=t(74848),a=t(28453),r=t(59907);const s={},d="CoordinatesMetatable",l={},c=[{value:"Clone",id:"clone",level:2},{value:"CoordStringWithoutPlanet",id:"coordstringwithoutplanet",level:2},{value:"GetRandom",id:"getrandom",level:2},{value:"GetSeed",id:"getseed",level:2},{value:"ToArray",id:"toarray",level:2},{value:"__add",id:"__add",level:2},{value:"__div",id:"__div",level:2},{value:"__eq",id:"__eq",level:2},{value:"__index",id:"__index",level:2},{value:"__mul",id:"__mul",level:2},{value:"__tostring",id:"__tostring",level:2},{value:"type",id:"type",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"coordinatesmetatable",children:"CoordinatesMetatable"})}),"\n",(0,i.jsx)(n.h2,{id:"clone",children:"Clone"}),"\n",(0,i.jsx)(n.p,{children:"It is a function, and I am too lazy to generate a description for it as of right now \u2764\ufe0f\u2728."}),"\n",(0,i.jsx)(n.h2,{id:"coordstringwithoutplanet",children:"CoordStringWithoutPlanet"}),"\n",(0,i.jsx)(n.p,{children:"It is a function, and I am too lazy to generate a description for it as of right now \u2764\ufe0f\u2728."}),"\n",(0,i.jsx)(n.h2,{id:"getrandom",children:"GetRandom"}),"\n",(0,i.jsx)(n.p,{children:"It is a function, and I am too lazy to generate a description for it as of right now \u2764\ufe0f\u2728."}),"\n",(0,i.jsx)(n.h2,{id:"getseed",children:"GetSeed"}),"\n",(0,i.jsx)(n.p,{children:"It is a function, and I am too lazy to generate a description for it as of right now \u2764\ufe0f\u2728."}),"\n",(0,i.jsx)(n.h2,{id:"toarray",children:"ToArray"}),"\n",(0,i.jsx)(n.p,{children:"It is a function, and I am too lazy to generate a description for it as of right now \u2764\ufe0f\u2728."}),"\n",(0,i.jsx)(n.h2,{id:"__add",children:"__add"}),"\n",(0,i.jsx)(n.p,{children:"It is a function, and I am too lazy to generate a description for it as of right now \u2764\ufe0f\u2728."}),"\n",(0,i.jsx)(n.h2,{id:"__div",children:"__div"}),"\n",(0,i.jsx)(n.p,{children:"It is a function, and I am too lazy to generate a description for it as of right now \u2764\ufe0f\u2728."}),"\n",(0,i.jsx)(n.h2,{id:"__eq",children:"__eq"}),"\n",(0,i.jsx)(n.p,{children:"It is a function, and I am too lazy to generate a description for it as of right now \u2764\ufe0f\u2728."}),"\n",(0,i.jsx)(n.h2,{id:"__index",children:"__index"}),"\n",(0,i.jsxs)(n.p,{children:["It is of the type ",(0,i.jsx)("code",{children:"CoordinatesMetatable"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"__mul",children:"__mul"}),"\n",(0,i.jsx)(n.p,{children:"It is a function, and I am too lazy to generate a description for it as of right now \u2764\ufe0f\u2728."}),"\n",(0,i.jsx)(n.h2,{id:"__tostring",children:"__tostring"}),"\n",(0,i.jsx)(n.p,{children:"It is a function, and I am too lazy to generate a description for it as of right now \u2764\ufe0f\u2728."}),"\n",(0,i.jsx)(n.h2,{id:"type",children:"type"}),"\n",(0,i.jsxs)(n.p,{children:["It is always the string ",(0,i.jsx)("code",{children:"Coordinates"}),"."]}),"\n",(0,i.jsx)(r.A,{id:"Luau Type",group:"group",children:"Luau Type"}),"\n",(0,i.jsxs)(n.p,{children:["This is the luau type for ",(0,i.jsx)("code",{children:"CoordinatesMetatable"}),". It may help clear up mistranslations from the raw data to the wiki page (as it is an automatic process)."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'type CoordinatesMetatable = {\n\ttype: "Coordinates",\n\t__eq: (self: Coordinates, Coordinates) -> boolean,\n\t__mul: (self: Coordinates, Coordinates) -> Coordinates,\n\tToArray: (self: Coordinates) -> { number | boolean },\n\t__add: (self: Coordinates, Coordinates) -> Coordinates,\n\t__div: (self: Coordinates, Coordinates) -> Coordinates,\n\tClone: (self: Coordinates) -> Coordinates,\n\tGetRandom: (self: Coordinates) -> Random,\n\tGetSeed: (self: Coordinates) -> number,\n\tCoordStringWithoutPlanet: (self: Coordinates) -> string,\n\t__index: CoordinatesMetatable,\n\t__tostring: (self: Coordinates) -> string,\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},81113:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var o=t(74848);function i(e){return(0,o.jsx)("svg",{viewBox:"0 0 24 24",...e,children:(0,o.jsx)("path",{fill:"currentColor",d:"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"})})}}}]);