"use strict";(self.webpackChunkwaste_of_space_wiki=self.webpackChunkwaste_of_space_wiki||[]).push([[4257],{3543:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"objects/FluidProjector","title":"FluidProjector","description":"A device which projects a field of gas or liquid in front of it which you can swim in.","source":"@site/docs/objects/FluidProjector.md","sourceDirName":"objects","slug":"/objects/FluidProjector","permalink":"/Pilot.lua-Luau-LSP/objects/FluidProjector","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Unused","permalink":"/Pilot.lua-Luau-LSP/tags/unused"},{"inline":true,"label":"Electrical","permalink":"/Pilot.lua-Luau-LSP/tags/electrical"},{"inline":true,"label":"Spawnable","permalink":"/Pilot.lua-Luau-LSP/tags/spawnable"},{"inline":true,"label":"Non-Programmable","permalink":"/Pilot.lua-Luau-LSP/tags/non-programmable"},{"inline":true,"label":"Configurable","permalink":"/Pilot.lua-Luau-LSP/tags/configurable"}],"version":"current","frontMatter":{"tags":["Unused","Electrical","Spawnable","Non-Programmable","Configurable"]},"sidebar":"objectsSidebar","previous":{"title":"FloatDevice","permalink":"/Pilot.lua-Luau-LSP/objects/FloatDevice"},"next":{"title":"Food","permalink":"/Pilot.lua-Luau-LSP/objects/Food"}}');var r=n(4848),l=n(8453);const o={tags:["Unused","Electrical","Spawnable","Non-Programmable","Configurable"]},s=void 0,a={},c=[{value:"Configurables",id:"configurables",level:2},{value:"Fluid",id:"fluid",level:3},{value:"Size",id:"size",level:3},{value:"Events",id:"events",level:2},{value:"Configured(configurerId)",id:"configuredconfigurerid",level:3},{value:"Loop(deltaTime)",id:"loopdeltatime",level:3}];function d(e){const i={h2:"h2",h3:"h3",hr:"hr",p:"p",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"A device which projects a field of gas or liquid in front of it which you can swim in.\nHost the universe's greatest pool party!\nThe fluid area can be configureed in size and type."}),"\n",(0,r.jsx)(i.p,{children:"The FluidProjector requires power in order to work, and must be supplied with the correct fluid to work.\nSignificantly more power is required on planets with high gravity.\nAs an example, if the fluid is water, it will need a supplied Tank of water attached to work."}),"\n",(0,r.jsx)(i.p,{children:"It is a spawnable non-flammable solid."}),"\n",(0,r.jsx)(i.p,{children:"It cannot be resized."}),"\n",(0,r.jsx)(i.p,{children:"At its default size (2x2x3) it has a durability of 1."}),"\n",(0,r.jsxs)(i.p,{children:["By default, its colour is ",(0,r.jsx)("span",{style:{color:"#A3A2A5"},children:"#a3a2a5"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["It requires 100 ",(0,r.jsx)("code",{children:"Iron"}),", 500 ",(0,r.jsx)("code",{children:"Pipe"}),", and 50 ",(0,r.jsx)("code",{children:"Wire"})," to be crafted."]}),"\n",(0,r.jsx)(i.h2,{id:"configurables",children:"Configurables"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"fluid",children:"Fluid"}),"\n",(0,r.jsxs)(i.p,{children:["The name of the fluid being projected. It is a ",(0,r.jsx)("code",{children:"string"}),"."]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"size",children:"Size"}),"\n",(0,r.jsxs)(i.p,{children:["The size in studs of the projected fluid field. It is a ",(0,r.jsx)("code",{children:"Vector3"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"events",children:"Events"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"configuredconfigurerid",children:"Configured(configurerId)"}),"\n",(0,r.jsx)(i.p,{children:"Fires when the object is configured."}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)("b",{children:"configurerId"})," parameter is the ",(0,r.jsx)("code",{children:"UserId"})," of the player who configured the object. It is a ",(0,r.jsx)("code",{children:"number"}),"."]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h3,{id:"loopdeltatime",children:"Loop(deltaTime)"}),"\n",(0,r.jsx)(i.p,{children:"Fires when the object is updated by the game loop."}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)("b",{children:"deltaTime"})," parameter is the 'time' since the last tick, it does not represent the ",(0,r.jsx)("i",{children:"actual"})," time since the last tick was occurred, rather just how often a game tick should be fired (it will always be precisely ",(0,r.jsx)("code",{children:"1"}),"). It is a ",(0,r.jsx)("code",{children:"number"}),"."]})]})}function u(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>s});var t=n(6540);const r={},l=t.createContext(r);function o(e){const i=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(l.Provider,{value:i},e.children)}}}]);