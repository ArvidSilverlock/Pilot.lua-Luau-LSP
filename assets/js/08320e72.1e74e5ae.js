"use strict";(self.webpackChunkwaste_of_space_wiki=self.webpackChunkwaste_of_space_wiki||[]).push([[9050],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var t=r(96540);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}},56046:(e,n,r)=>{r.d(n,{A:()=>C});var t=r(96540),i=r(34164),a=r(21312),o=r(6342),s=(r(38193),r(89532)),l=r(89466),c=r(74848);const d=t.createContext(void 0),h="theme";(0,l.Wf)(h);function u(){const e=(0,t.useContext)(d);if(null==e)throw new s.dV("ColorModeProvider","Please see https://docusaurus.io/docs/api/themes/configuration#use-color-mode.");return e}var x=r(28774),m=r(63427),p=r(92303);function f(e){let{children:n,fallback:r}=e;return(0,p.A)()?(0,c.jsx)(c.Fragment,{children:n?.()}):r??null}var g=r(61409),j=r(81113);function b(e){return(0,c.jsx)("svg",{viewBox:"0 0 24 24",...e,children:(0,c.jsx)("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})})}const v={anchorWithStickyNavbar:"anchorWithStickyNavbar_wkc4",anchorWithHideOnScrollNavbar:"anchorWithHideOnScrollNavbar_m_Ui"};var w=r(56347);function C(e){let{id:n,group:r,...t}=e;const s=(0,m.A)(),{navbar:{hideOnScroll:l}}=(0,o.p)();s.collectAnchor(n);const d="group"===r?"h2":"h3",h=(0,a.T)({id:"theme.common.headingLinkTitle",message:"Direct link to {heading}",description:"Title for link to heading"},{heading:n}),p=(0,a.T)({id:"theme.common.markdownLinkTitle",message:"Copy markdown link to {heading}",description:"Markdown for link to heading"},{heading:n}),C=(0,w.zy)().pathname;return(0,c.jsxs)(d,{...t,className:(0,i.A)("anchor",l?v.anchorWithHideOnScrollNavbar:v.anchorWithStickyNavbar,t.className),id:n,children:[t.children,(0,c.jsx)(x.A,{className:"icon-link",to:`#${n}`,"aria-label":h,title:h,children:(0,c.jsx)(b,{width:"0.75em",height:"0.75em"})}),(0,c.jsx)(f,{children:()=>{const e=location.pathname.split("/").filter(Boolean),t=e[e.length-1],i=`[${"group"==r?`\`${t}\`'s ${n.toLowerCase()}`:"method"==r?`\`${t}:${n}()\``:`\`${t}.${n}\``}](<${`${window.location.origin}${C}#${n}`}>)`;return(0,c.jsx)("a",{className:"icon-link","aria-label":p,title:p,onClick:()=>{g.oR.dark((0,c.jsxs)("a",{children:["Copied the ",(0,c.jsx)("code",{children:n})," link to clipboard."]}),{position:"top-center",autoClose:1e3,hideProgressBar:!0,closeOnClick:!0,pauseOnHover:!0,draggable:!1,progress:void 0,theme:u().colorMode,transition:g.GP}),navigator.clipboard.writeText(i)},children:(0,c.jsx)(j.A,{width:"0.75em",height:"0.75em"})})}})]})}},62944:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"objects/Screen","title":"Screen","description":"Allows for the programmatic creation of GUI elements.","source":"@site/docs/objects/Screen.mdx","sourceDirName":"objects","slug":"/objects/Screen","permalink":"/Pilot.lua-Luau-LSP/objects/Screen","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Logic","permalink":"/Pilot.lua-Luau-LSP/tags/logic"},{"inline":true,"label":"Electrical","permalink":"/Pilot.lua-Luau-LSP/tags/electrical"},{"inline":true,"label":"Spawnable","permalink":"/Pilot.lua-Luau-LSP/tags/spawnable"},{"inline":true,"label":"Craftable","permalink":"/Pilot.lua-Luau-LSP/tags/craftable"},{"inline":true,"label":"Programmable","permalink":"/Pilot.lua-Luau-LSP/tags/programmable"},{"inline":true,"label":"Configurable","permalink":"/Pilot.lua-Luau-LSP/tags/configurable"}],"version":"current","frontMatter":{"tags":["Logic","Electrical","Spawnable","Craftable","Programmable","Configurable"]},"sidebar":"objectsSidebar","previous":{"title":"Scrapper","permalink":"/Pilot.lua-Luau-LSP/objects/Scrapper"},"next":{"title":"ScubaMask","permalink":"/Pilot.lua-Luau-LSP/objects/ScubaMask"}}');var i=r(74848),a=r(28453),o=r(56046);const s={tags:["Logic","Electrical","Spawnable","Craftable","Programmable","Configurable"]},l=void 0,c={},d=[{value:"Methods",id:"Methods",level:2},{value:"ClearElements()",id:"ClearElements",level:3},{value:"CreateElement()",id:"CreateElement",level:3},{value:"GetCanvas()",id:"GetCanvas",level:3},{value:"GetDimensions()",id:"GetDimensions",level:3},{value:"Configurables",id:"Configurables",level:2},{value:"VideoID",id:"VideoID",level:3},{value:"Events",id:"Events",level:2},{value:"Configured",id:"Configured",level:3}];function h(e){const n={a:"a",code:"code",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Allows for the programmatic creation of GUI elements."}),"\n",(0,i.jsxs)(n.p,{children:["Internally, it utilises a ",(0,i.jsx)(n.a,{href:"https://create.roblox.com/docs/reference/engine/classes/SurfaceGui",children:(0,i.jsx)("code",{children:"SurfaceGUI"})}),", and is therefore no different from normal roblox GUIs."]}),"\n",(0,i.jsxs)(n.p,{children:["There are some limitations with ",(0,i.jsx)("code",{children:"Screen"}),"s in Waste of Space, such as an inability to use ",(0,i.jsx)("code",{children:(0,i.jsx)(n.a,{href:"https://create.roblox.com/docs/reference/engine/classes/SurfaceGui",children:"ViewportFrame"})}),"s"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Try and get the screen part, throw an error if we don\'t find it using `assert`.\nlocal screen = assert(GetPart("Screen"), "no screen connected")\n\n-- Create a text label with the text \'Hello, world!\' which takes up the entire screen.\nlocal textLabel = Instance.new("TextLabel")\ntextLabel.Text = "Hello, world!"\ntextLabel.Size = UDim2.fromScale(1, 1)\ntextLabel.BorderSizePixel = 0\ntextLabel.BackgroundColor = Color3.fromRGB(255, 255, 255)\n\n-- Parent it to the \'canvas\' of the screen.\ntextLabel.Parent = screen:GetCanvas()\n\n-- Keep the microcontroller on by permanently \'yielding\' the code (making it wait).\ncoroutine.yield()\n'})}),"\n",(0,i.jsx)(n.p,{children:"It is a craftable and spawnable non-flammable solid."}),"\n",(0,i.jsx)(n.p,{children:"Here is a list of possible sizes that reach the maximum malleability (400) that have integer components: 1x400x1, 1x200x2, 1x100x4, 1x80x5, 1x50x8, 1x40x10, 1x25x16, 1x20x20, 2x100x2, 2x50x4, 2x40x5, 2x25x8, 2x20x10, 4x25x4, 4x20x5, 4x10x10, 5x16x5, 5x10x8, 10x8x5, 16x5x5, 20x10x2, 20x5x4"}),"\n",(0,i.jsx)(n.p,{children:"At its default size (8x1x8) it has a durability of 1, at its maximum size it has a durability of 2."}),"\n",(0,i.jsxs)(n.p,{children:["By default, its colour is ",(0,i.jsx)("span",{style:{color:"#111111"},children:"#111111"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["It requires 5 ",(0,i.jsx)("code",{children:"Glass"}),", 3 ",(0,i.jsx)("code",{children:"Iron"}),", 3 ",(0,i.jsx)("code",{children:"Light"}),", 3 ",(0,i.jsx)("code",{children:"Silicon"}),", and 3 ",(0,i.jsx)("code",{children:"Wire"})," to be crafted."]}),"\n",(0,i.jsx)(o.A,{id:"Methods",group:"group",children:"Methods"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(o.A,{id:"ClearElements",group:"method",children:"ClearElements()"}),"\n",(0,i.jsx)(n.p,{children:"Clears all objects that are descendants of the screen."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(o.A,{id:"CreateElement",group:"method",children:"CreateElement(className, properties) \u2192 element"}),"\n",(0,i.jsx)(n.p,{children:"Creates an element of the specified class name with the specified properties."}),"\n",(0,i.jsxs)(n.p,{children:["The parameters for ",(0,i.jsx)("code",{children:"CreateElement"})," are as follows:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)("b",{children:"className"})," parameter is a ",(0,i.jsx)("code",{children:"string"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)("b",{children:"properties"})," parameter is a dictionary with keys that are ",(0,i.jsx)("code",{children:"string"}),"s and values that are ",(0,i.jsx)("code",{children:"any"}),"s."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)("b",{children:"element"})," return is an ",(0,i.jsx)("code",{children:"Instance"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Try and get the screen part, throw an error if we don\'t find it using `assert`.\nlocal screen = assert(GetPart("Screen"), "no screen connected")\n\n-- Clear the left over screen elements from the last time GUIs were loaded onto it.\n-- Note: If you utilise the `Instance.new` API instead, you do not need to do this,\n--       as objects created through said API are *automatically* deleted when the\n--       microcontroller stops running.\nscreen:ClearElements()\n\n-- Call the `CreateElement` method with the `ClassName` of the object you want to create,\n-- and a dictionary of the properties to apply (you cannot specify the `Parent` property).\nlocal textLabel = screen:CreateElement("TextLabel", {\n    Text = "Hello, world!",\n    Size = UDim2.fromScale(1, 1),\n    BorderSizePixel = 0,\n    BackgroundColor = Color3.fromRGB(255, 255, 255),\n})\n\n-- Keep the microcontroller on by permanently \'yielding\' the code (making it wait).\ncoroutine.yield()\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(o.A,{id:"GetCanvas",group:"method",children:"GetCanvas() \u2192 canvas"}),"\n",(0,i.jsx)(n.p,{children:"Returns the parent container of all the screen's content."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)("b",{children:"canvas"})," return is a ",(0,i.jsx)("code",{children:"Frame"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(o.A,{id:"GetDimensions",group:"method",children:"GetDimensions() \u2192 dimensions"}),"\n",(0,i.jsxs)(n.p,{children:["Gets the size of the screen in pixels in the form of a ",(0,i.jsx)("code",{children:"Vector2"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)("b",{children:"dimensions"})," return is the size of the screen in pixels. It is a ",(0,i.jsx)("code",{children:"Vector2"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'-- Try and get the screen part, throw an error if we don\'t find it using `assert`.\nlocal screen = assert(GetPart("Screen"), "no screen connected")\n\n-- Store the current screen size.\nlocal previousScreenSize = screen:GetDimensions()\n\n-- Connect to the `Loop` event of the `Microcontroller` that is running the code,\n-- this will make the code within run precisely every game tick.\nMicrocontroller.Loop:Connect(function()\n    -- Get the new current screen dimensions.\n    local screenSize = screen:GetDimensions()\n\n    -- Compare these new dimensions with the previously recorded dimensions, if\n    -- they are equal, cancel this running code with \'return\'.\n    if screenSize == previousScreenSize then return end\n\n    -- Do something with the information about the screen dimensions changing,\n    -- in this case, it triggers a print statement.\n    print(`The screen size changed! It used to be {previousScreenSize}, but is now {screenSize}!`)\n\n    -- Update the stored current dimensions as to make them accurately reflect reality.\n    previousScreenSize = screenSize\nend)\n'})}),"\n",(0,i.jsx)(o.A,{id:"Configurables",group:"group",children:"Configurables"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(o.A,{id:"VideoID",group:"configurable",children:"VideoID"}),"\n",(0,i.jsxs)(n.p,{children:["The ID of the camera feed being to be viewed, or 0 for none. It is a ",(0,i.jsx)("code",{children:"number"}),".\nIt ranges between 0 and 10000000000. It increments by 1."]}),"\n",(0,i.jsx)(o.A,{id:"Events",group:"group",children:"Events"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(o.A,{id:"Configured",group:"event",children:"Configured(configurerId)"}),"\n",(0,i.jsx)(n.p,{children:"Fires when the object is configured."}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)("b",{children:"configurerId"})," parameter is the ",(0,i.jsx)("code",{children:"UserId"})," of the player who configured the object. It is a ",(0,i.jsx)("code",{children:"number"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},81113:(e,n,r)=>{r.d(n,{A:()=>i});r(96540);var t=r(74848);function i(e){return(0,t.jsx)("svg",{viewBox:"0 0 24 24",...e,children:(0,t.jsx)("path",{fill:"currentColor",d:"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"})})}}}]);