"use strict";(self.webpackChunkwaste_of_space_wiki=self.webpackChunkwaste_of_space_wiki||[]).push([[4163],{16134:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>d,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"types/Types/ARInput","title":"ARInput","description":"This is manually transcribed.","source":"@site/docs/types/Types/ARInput.md","sourceDirName":"types/Types","slug":"/types/Types/ARInput","permalink":"/Pilot.lua-Luau-LSP/types/Types/ARInput","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typesSidebar","previous":{"title":"ARCursor","permalink":"/Pilot.lua-Luau-LSP/types/Types/ARCursor"}}');var t=s(74848),r=s(28453);const d={},i="ARInput",l={},o=[{value:"Gamepad",id:"gamepad",level:2},{value:"GamepadEnabled",id:"gamepadenabled",level:2},{value:"Keyboard",id:"keyboard",level:2},{value:"KeyboardEnabled",id:"keyboardenabled",level:2},{value:"LastInputType",id:"lastinputtype",level:2},{value:"Mouse",id:"mouse",level:2},{value:"TouchEnabled",id:"touchenabled",level:2},{value:"VREnabled",id:"vrenabled",level:2}];function c(e){const n={h1:"h1",h2:"h2",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"arinput",children:"ARInput"})}),"\n",(0,t.jsx)(n.p,{children:"This is manually transcribed."}),"\n",(0,t.jsx)(n.h2,{id:"gamepad",children:"Gamepad"}),"\n",(0,t.jsxs)(n.p,{children:["A dictionary of ",(0,t.jsx)("code",{children:"Enum.UserInputType.GamepadX"})," keys to an array of ",(0,t.jsx)("code",{children:"InputObject"}),"s representing the current state of all available inputs for said gamepad as values."]}),"\n",(0,t.jsx)(n.h2,{id:"gamepadenabled",children:"GamepadEnabled"}),"\n",(0,t.jsx)(n.p,{children:"This property describes whether the device being used by a user has an available gamepad. If gamepads are available."}),"\n",(0,t.jsx)(n.p,{children:"It is a boolean."}),"\n",(0,t.jsx)(n.h2,{id:"keyboard",children:"Keyboard"}),"\n",(0,t.jsxs)(n.p,{children:["An array of ",(0,t.jsx)("code",{children:"InputObject"}),"s associated with the keys currently being pressed."]}),"\n",(0,t.jsx)(n.h2,{id:"keyboardenabled",children:"KeyboardEnabled"}),"\n",(0,t.jsxs)(n.p,{children:["This property describes whether the user's device has a keyboard available. This property is ",(0,t.jsx)("code",{children:"true"})," when the user's device has an available keyboard, and ",(0,t.jsx)("code",{children:"false"})," when it does not."]}),"\n",(0,t.jsx)(n.h2,{id:"lastinputtype",children:"LastInputType"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)("code",{children:"Enum.UserInputType"})," associated with the user's most recent input."]}),"\n",(0,t.jsx)(n.h2,{id:"mouse",children:"Mouse"}),"\n",(0,t.jsxs)(n.p,{children:["An array of ",(0,t.jsx)("code",{children:"InputObject"}),"s corresponding to the mouse buttons currently being currently held down."]}),"\n",(0,t.jsx)(n.h2,{id:"touchenabled",children:"TouchEnabled"}),"\n",(0,t.jsx)(n.p,{children:"This property describes whether the user's current device has a touch screen available."}),"\n",(0,t.jsx)(n.p,{children:"It is a boolean."}),"\n",(0,t.jsx)(n.h2,{id:"vrenabled",children:"VREnabled"}),"\n",(0,t.jsx)(n.p,{children:"This property describes whether the user is using a virtual reality (VR) device."}),"\n",(0,t.jsx)(n.p,{children:"It is a boolean."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>i});var a=s(96540);const t={},r=a.createContext(t);function d(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);