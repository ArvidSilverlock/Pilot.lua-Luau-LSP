"use strict";(self.webpackChunkwaste_of_space_wiki=self.webpackChunkwaste_of_space_wiki||[]).push([[6119],{6102:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"objects/Hatch","title":"Hatch","description":"Acts as a chute when active/gray, but when black or inactive it acts as a normal object.","source":"@site/docs/objects/Hatch.md","sourceDirName":"objects","slug":"/objects/Hatch","permalink":"/Pilot.lua-Luau-LSP/objects/Hatch","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Logic","permalink":"/Pilot.lua-Luau-LSP/tags/logic"},{"inline":true,"label":"Spawnable","permalink":"/Pilot.lua-Luau-LSP/tags/spawnable"},{"inline":true,"label":"Craftable","permalink":"/Pilot.lua-Luau-LSP/tags/craftable"},{"inline":true,"label":"Non-Programmable","permalink":"/Pilot.lua-Luau-LSP/tags/non-programmable"},{"inline":true,"label":"Configurable","permalink":"/Pilot.lua-Luau-LSP/tags/configurable"}],"version":"current","frontMatter":{"tags":["Logic","Spawnable","Craftable","Non-Programmable","Configurable"]},"sidebar":"objectsSidebar","previous":{"title":"Handle","permalink":"/Pilot.lua-Luau-LSP/objects/Handle"},"next":{"title":"HeatCell","permalink":"/Pilot.lua-Luau-LSP/objects/HeatCell"}}');var i=n(4848),r=n(8453);const l={tags:["Logic","Spawnable","Craftable","Non-Programmable","Configurable"]},c=void 0,s={},o=[{value:"Configurables",id:"configurables",level:2},{value:"SwitchValue",id:"switchvalue",level:3},{value:"Events",id:"events",level:2},{value:"Configured(configurerId)",id:"configuredconfigurerid",level:3},{value:"OnClick(clickerId)",id:"onclickclickerid",level:3}];function h(e){const t={code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Acts as a chute when active/gray, but when black or inactive it acts as a normal object."}),"\n",(0,i.jsx)(t.p,{children:"It is a craftable and spawnable non-flammable solid."}),"\n",(0,i.jsx)(t.p,{children:"Here is a list of possible sizes that reach the maximum malleability (144) that have integer components: 1x144x1, 1x72x2, 1x48x3, 1x36x4, 1x24x6, 1x18x8, 1x16x9, 1x12x12, 2x36x2, 2x24x3, 2x18x4, 2x12x6, 2x9x8, 3x16x3, 3x12x4, 3x8x6, 4x9x4, 4x6x6, 8x6x3, 9x8x2, 9x4x4, 12x6x2, 12x4x3"}),"\n",(0,i.jsx)(t.p,{children:"At its default size (2x1x2) it has a durability of 3, at its maximum size it has a durability of 10."}),"\n",(0,i.jsxs)(t.p,{children:["By default, its colour is ",(0,i.jsx)("span",{style:{color:"#111111"},children:"#111111"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["It requires 1 ",(0,i.jsx)("code",{children:"Chute"})," and 1 ",(0,i.jsx)("code",{children:"Rubber"})," to be crafted."]}),"\n",(0,i.jsx)(t.h2,{id:"configurables",children:"Configurables"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"switchvalue",children:"SwitchValue"}),"\n",(0,i.jsxs)(t.p,{children:["Determines whether the switch is active or not. It is a ",(0,i.jsx)("code",{children:"boolean"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",children:'local sift = require("sift") -- Grab this fancy library for manipulating tables provided by wos.\n\n-- Get all of the types of objects with a `SwitchValue` (save for `TemperatureGate`) configurable\n-- and merge them into one big table.\nlocal objects = sift.Array.merge(\n    GetParts("Switch"),\n    GetParts("TriggerSwitch"),\n    GetParts("Valve"),\n    GetParts("Hatch"),\n    GetParts("HeatValve")\n)\n\n-- Have a 50/50 chance to be on/off when the code starts running.\nlocal initialState = math.random() > 0.5\n\n-- Iterate over all of the switch objects and disable them. `_` is used as a placeholder variable.\nfor _, switch in objects do\n    -- You could alternatively do `switch:Configure({ SwitchValue = initialState })`\n    switch.SwitchValue = initialState\nend\n\n-- Connect to the `Loop` event of the `Microcontroller` that is running the code,\n-- this will make the code within run precisely every game tick.\nMicrocontroller.Loop:Connect(function()\n    -- Iterate over all the switches again!\n    for _, switch in objects do\n        -- Here we *read* the `SwitchValue`, then invert it, then write it back, as\n        -- to toggle the switch.\n        switch.SwitchValue = not switch.SwitchValue\n    end\nend)\n'})}),"\n",(0,i.jsx)(t.h2,{id:"events",children:"Events"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"configuredconfigurerid",children:"Configured(configurerId)"}),"\n",(0,i.jsx)(t.p,{children:"Fires when the object is configured."}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)("b",{children:"configurerId"})," parameter is the ",(0,i.jsx)("code",{children:"UserId"})," of the player who configured the object. It is a ",(0,i.jsx)("code",{children:"number"}),"."]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"onclickclickerid",children:"OnClick(clickerId)"}),"\n",(0,i.jsx)(t.p,{children:"Fires when the object is clicked."}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)("b",{children:"clickerId"})," parameter is the ",(0,i.jsx)("code",{children:"UserId"})," of the player who clicked the object. It is a ",(0,i.jsx)("code",{children:"number"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>c});var a=n(6540);const i={},r=a.createContext(i);function l(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);