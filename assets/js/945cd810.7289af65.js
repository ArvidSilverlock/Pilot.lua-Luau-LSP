"use strict";(self.webpackChunkwaste_of_space_wiki=self.webpackChunkwaste_of_space_wiki||[]).push([[451],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var o=n(96540);const i={},a=o.createContext(i);function r(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}},56046:(e,t,n)=>{n.d(t,{A:()=>k});var o=n(96540),i=n(34164),a=n(21312),r=n(6342),l=(n(38193),n(89532)),s=n(89466),c=n(74848);const h=o.createContext(void 0),u="theme";(0,s.Wf)(u);function d(){const e=(0,o.useContext)(h);if(null==e)throw new l.dV("ColorModeProvider","Please see https://docusaurus.io/docs/api/themes/configuration#use-color-mode.");return e}var m=n(28774),g=n(63427),p=n(92303);function b(e){let{children:t,fallback:n}=e;return(0,p.A)()?(0,c.jsx)(c.Fragment,{children:t?.()}):n??null}var f=n(61409),x=n(81113);function w(e){return(0,c.jsx)("svg",{viewBox:"0 0 24 24",...e,children:(0,c.jsx)("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})})}const j={anchorWithStickyNavbar:"anchorWithStickyNavbar_wkc4",anchorWithHideOnScrollNavbar:"anchorWithHideOnScrollNavbar_m_Ui"};var v=n(56347);function k(e){let{id:t,group:n,...o}=e;const l=(0,g.A)(),{navbar:{hideOnScroll:s}}=(0,r.p)();l.collectAnchor(t);const h="group"===n?"h2":"h3",u=(0,a.T)({id:"theme.common.headingLinkTitle",message:"Direct link to {heading}",description:"Title for link to heading"},{heading:t}),p=(0,a.T)({id:"theme.common.markdownLinkTitle",message:"Copy markdown link to {heading}",description:"Markdown for link to heading"},{heading:t}),k=(0,v.zy)().pathname;return(0,c.jsxs)(h,{...o,className:(0,i.A)("anchor",s?j.anchorWithHideOnScrollNavbar:j.anchorWithStickyNavbar,o.className),id:t,children:[o.children,(0,c.jsx)(m.A,{className:"icon-link",to:`#${t}`,"aria-label":u,title:u,children:(0,c.jsx)(w,{width:"0.75em",height:"0.75em"})}),(0,c.jsx)(b,{children:()=>{const e=location.pathname.split("/").filter(Boolean),o=e[e.length-1],i=`[${"group"==n?`\`${o}\`'s ${t.toLowerCase()}`:"method"==n?`\`${o}:${t}()\``:`\`${o}.${t}\``}](<${`${window.location.origin}${k}#${t}`}>)`;return(0,c.jsx)("a",{className:"icon-link","aria-label":p,title:p,onClick:()=>{f.oR.dark((0,c.jsxs)("a",{children:["Copied the ",(0,c.jsx)("code",{children:t})," link to clipboard."]}),{position:"top-center",autoClose:1e3,hideProgressBar:!0,closeOnClick:!0,pauseOnHover:!0,draggable:!1,progress:void 0,theme:d().colorMode,transition:f.GP}),navigator.clipboard.writeText(i)},children:(0,c.jsx)(x.A,{width:"0.75em",height:"0.75em"})})}})]})}},81113:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var o=n(74848);function i(e){return(0,o.jsx)("svg",{viewBox:"0 0 24 24",...e,children:(0,o.jsx)("path",{fill:"currentColor",d:"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"})})}},85551:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"objects/LightTube","title":"LightTube","description":"Emits light when powered with electricity. Can be colored in different ways, changing the light color.","source":"@site/docs/objects/LightTube.mdx","sourceDirName":"objects","slug":"/objects/LightTube","permalink":"/Pilot.lua-Luau-LSP/objects/LightTube","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"Electrical","permalink":"/Pilot.lua-Luau-LSP/tags/electrical"},{"inline":true,"label":"Spawnable","permalink":"/Pilot.lua-Luau-LSP/tags/spawnable"},{"inline":true,"label":"Craftable","permalink":"/Pilot.lua-Luau-LSP/tags/craftable"},{"inline":true,"label":"Programmable","permalink":"/Pilot.lua-Luau-LSP/tags/programmable"},{"inline":true,"label":"Non-Configurable","permalink":"/Pilot.lua-Luau-LSP/tags/non-configurable"}],"version":"current","frontMatter":{"tags":["Electrical","Spawnable","Craftable","Programmable","Non-Configurable"]},"sidebar":"objectsSidebar","previous":{"title":"LightBridge","permalink":"/Pilot.lua-Luau-LSP/objects/LightBridge"},"next":{"title":"Magnesium","permalink":"/Pilot.lua-Luau-LSP/objects/Magnesium"}}');var i=n(74848),a=n(28453),r=n(56046);const l={tags:["Electrical","Spawnable","Craftable","Programmable","Non-Configurable"]},s=void 0,c={},h=[{value:"Methods",id:"Methods",level:2},{value:"SetColor()",id:"SetColor",level:3}];function u(e){const t={code:"code",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Emits light when powered with electricity. Can be colored in different ways, changing the light color."}),"\n",(0,i.jsx)(t.p,{children:"It is a craftable and spawnable non-flammable solid."}),"\n",(0,i.jsx)(t.p,{children:"Here is a list of possible sizes that reach the maximum malleability (64) that have integer components: 1x64x1, 1x32x2, 1x16x4, 1x8x8, 2x16x2, 2x8x4, 4x4x4, 8x4x2"}),"\n",(0,i.jsx)(t.p,{children:"At its default size (1x1x10) it has a durability of 1, at its maximum size it has a durability of 2."}),"\n",(0,i.jsxs)(t.p,{children:["By default, its colour is ",(0,i.jsx)("span",{style:{color:"#FFFFFF"},children:"#ffffff"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["It requires 2 ",(0,i.jsx)("code",{children:"Glass"})," and 2 ",(0,i.jsx)("code",{children:"Wire"})," to be crafted."]}),"\n",(0,i.jsx)(r.A,{id:"Methods",group:"group",children:"Methods"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(r.A,{id:"SetColor",group:"method",children:"SetColor(color)"}),"\n",(0,i.jsx)(t.p,{children:"Sets the color of the object."}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)("b",{children:"color"})," parameter is the ",(0,i.jsx)("code",{children:"Color3"})," of the color you want to set the object to. It is a ",(0,i.jsx)("code",{children:"Color3"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-lua",children:"local sift = require(\"sift\") -- Grab this fancy library for manipulating tables provided by wos.\n\n-- Get all of the types of objects with a `:SetColor` method and merge them into one big table.\nlocal objects = sift.Array.merge(\n    GetParts(\"Light\"),\n    GetParts(\"LightTube\"),\n    GetParts(\"SpotLight\"),\n    GetParts(\"EnergyShield\")\n)\n\n-- We want this to run infinitely, but we want to run it every frame, rather than every game\n-- tick, so we won't use the `Microcontroller.Loop` event.\nwhile true do\n    -- First we want to get the current time, the function `os.clock` gives us a very precise\n    -- measurement of the current time (if you want to know, it basically uses the internal\n    -- clock of the computer running the code).\n    local currentTime = os.clock()\n\n    -- We then use the 'modulo' operator, what this does is it gives you the 'remainder'\n    -- from the division. So if you do something like `5.25 % 1` you get out the `0.25`,\n    -- or if you do, say, `31 % 2`, since 31 isn't divisble by 2 you get a remainder of `1`.\n\n    -- We do this so we just get the fractional aspect of the time (which would be the\n    -- milliseconds), giving us a number between 0 and 1.\n    local hue = currentTime % 1\n\n    -- We then construct a `Color3` passing in the value we just calculated, which, since\n    -- we used the modulo operator is always going to be between 0 and 1, the exact range\n    -- needed for the 'hue' of the `fromHSV`. We just set the 'saturation' and 'brightness'\n    -- to 1 to keep the colour nice and bright.\n\n    -- A helpful feature of the HSV colour space is that a hue of both `0` and `1` are red!\n    local color = Color3.fromHSV(hue, 1, 1)\n\n    -- Now we have our colour, we just want to apply it to all of our objects, so we'll use\n    -- a simple for loop. The 'index' or 'key' value is named '_' since we don't need it,\n    -- and naming it '_' is a good way to say it's an unused variable.\n    for _, object in objects do\n        -- Simply call the `SetColor` method (since it's a method, we use a `:` when\n        -- calling the function, rather than a `.`) passing in the `Color3`!\n        object:SetColor(color)\n    end\n\n      -- Wait a little bit before updating the colour again!\n    task.wait()\nend\n"})})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);